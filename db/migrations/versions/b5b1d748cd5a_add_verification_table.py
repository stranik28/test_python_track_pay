"""Add verification Table

Revision ID: b5b1d748cd5a
Revises: 071b5653a6d6
Create Date: 2023-09-23 02:00:12.039431

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b5b1d748cd5a'
down_revision = '071b5653a6d6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('verify_code',
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.Integer(), nullable=False),
    sa.Column('used', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('type_of_code', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['user.id'], name=op.f('fk_verify_code_account_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_verify_code')),
    sa.UniqueConstraint('id', name=op.f('uq_verify_code_id'))
    )
    op.create_unique_constraint(op.f('uq_bluetooth_device_id'), 'bluetooth_device', ['id'])
    op.create_unique_constraint(op.f('uq_payment_status_id'), 'payment_status', ['id'])
    op.create_unique_constraint(op.f('uq_preference_account_id'), 'preference_account', ['id'])
    op.create_unique_constraint(op.f('uq_ride_id'), 'ride', ['id'])
    op.create_unique_constraint(op.f('uq_ride_payment_id'), 'ride_payment', ['id'])
    op.create_unique_constraint(op.f('uq_ride_status_id'), 'ride_status', ['id'])
    op.create_unique_constraint(op.f('uq_sbp_account_id'), 'sbp_account', ['id'])
    op.create_unique_constraint(op.f('uq_touches_id'), 'touches', ['id'])
    op.create_unique_constraint(op.f('uq_transport_id'), 'transport', ['id'])
    op.create_unique_constraint(op.f('uq_transport_type_id'), 'transport_type', ['id'])
    op.create_unique_constraint(op.f('uq_user_id'), 'user', ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_user_id'), 'user', type_='unique')
    op.drop_constraint(op.f('uq_transport_type_id'), 'transport_type', type_='unique')
    op.drop_constraint(op.f('uq_transport_id'), 'transport', type_='unique')
    op.drop_constraint(op.f('uq_touches_id'), 'touches', type_='unique')
    op.drop_constraint(op.f('uq_sbp_account_id'), 'sbp_account', type_='unique')
    op.drop_constraint(op.f('uq_ride_status_id'), 'ride_status', type_='unique')
    op.drop_constraint(op.f('uq_ride_payment_id'), 'ride_payment', type_='unique')
    op.drop_constraint(op.f('uq_ride_id'), 'ride', type_='unique')
    op.drop_constraint(op.f('uq_preference_account_id'), 'preference_account', type_='unique')
    op.drop_constraint(op.f('uq_payment_status_id'), 'payment_status', type_='unique')
    op.drop_constraint(op.f('uq_bluetooth_device_id'), 'bluetooth_device', type_='unique')
    op.drop_table('verify_code')
    # ### end Alembic commands ###