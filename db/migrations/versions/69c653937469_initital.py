"""Initital

Revision ID: 69c653937469
Revises: 
Create Date: 2023-10-14 13:47:44.018960

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '69c653937469'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payment_status',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payment_status')),
    sa.UniqueConstraint('id', name=op.f('uq_payment_status_id')),
    sa.UniqueConstraint('sort', name=op.f('uq_payment_status_sort'))
    )
    op.create_table('ride_status',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ride_status')),
    sa.UniqueConstraint('id', name=op.f('uq_ride_status_id')),
    sa.UniqueConstraint('sort', name=op.f('uq_ride_status_sort'))
    )
    op.create_table('transport_type',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transport_type')),
    sa.UniqueConstraint('id', name=op.f('uq_transport_type_id'))
    )
    op.create_table('user',
    sa.Column('first_name', sa.Text(), nullable=False),
    sa.Column('last_name', sa.Text(), nullable=False),
    sa.Column('middle_name', sa.Text(), nullable=False),
    sa.Column('phone_number', sa.Text(), nullable=True),
    sa.Column('email', sa.VARCHAR(length=63), nullable=True),
    sa.Column('active', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.Column('password', sa.Text(), nullable=False),
    sa.Column('block', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('limit_rides', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('email', name=op.f('uq_user_email')),
    sa.UniqueConstraint('id', name=op.f('uq_user_id')),
    sa.UniqueConstraint('phone_number', name=op.f('uq_user_phone_number'))
    )
    op.create_table('sbp_account',
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_sbp_account_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sbp_account')),
    sa.UniqueConstraint('id', name=op.f('uq_sbp_account_id'))
    )
    op.create_index(op.f('ix_sbp_account_account_id'), 'sbp_account', ['account_id'], unique=False)
    op.create_index(op.f('ix_sbp_account_user_id'), 'sbp_account', ['user_id'], unique=False)
    op.create_table('transport',
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('number', sa.VARCHAR(length=6), nullable=False),
    sa.Column('region_numb', sa.VARCHAR(length=3), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('route_numb', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['type_id'], ['transport_type.id'], name=op.f('fk_transport_type_id_transport_type'), ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transport')),
    sa.UniqueConstraint('id', name=op.f('uq_transport_id'))
    )
    op.create_index(op.f('ix_transport_number'), 'transport', ['number'], unique=True)
    op.create_table('uuid_device',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_uuid_device_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_uuid_device')),
    sa.UniqueConstraint('id', name=op.f('uq_uuid_device_id'))
    )
    op.create_table('verify_code',
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.Integer(), nullable=False),
    sa.Column('used', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('type_of_code', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['user.id'], name=op.f('fk_verify_code_account_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_verify_code')),
    sa.UniqueConstraint('id', name=op.f('uq_verify_code_id'))
    )
    op.create_table('bluetooth_device',
    sa.Column('transport_id', sa.Integer(), nullable=False),
    sa.Column('mac_address', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['transport_id'], ['transport.id'], name=op.f('fk_bluetooth_device_transport_id_transport'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bluetooth_device')),
    sa.UniqueConstraint('id', name=op.f('uq_bluetooth_device_id'))
    )
    op.create_index(op.f('ix_bluetooth_device_mac_address'), 'bluetooth_device', ['mac_address'], unique=True)
    op.create_table('preference_account',
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['sbp_account.id'], name=op.f('fk_preference_account_account_id_sbp_account'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_preference_account_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_preference_account')),
    sa.UniqueConstraint('account_id', name=op.f('uq_preference_account_account_id')),
    sa.UniqueConstraint('id', name=op.f('uq_preference_account_id'))
    )
    op.create_index(op.f('ix_preference_account_user_id'), 'preference_account', ['user_id'], unique=False)
    op.create_table('ride',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('transport_id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('end_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['status_id'], ['ride_status.id'], name=op.f('fk_ride_status_id_ride_status'), ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['transport_id'], ['transport.id'], name=op.f('fk_ride_transport_id_transport'), ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_ride_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ride')),
    sa.UniqueConstraint('id', name=op.f('uq_ride_id'))
    )
    op.create_table('ride_payment',
    sa.Column('ride_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['sbp_account.id'], name=op.f('fk_ride_payment_account_id_sbp_account'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ride_id'], ['ride.id'], name=op.f('fk_ride_payment_ride_id_ride'), ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['status_id'], ['payment_status.id'], name=op.f('fk_ride_payment_status_id_payment_status')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ride_payment')),
    sa.UniqueConstraint('id', name=op.f('uq_ride_payment_id'))
    )
    op.create_table('touches',
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('bluetooth_device_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['bluetooth_device_id'], ['bluetooth_device.id'], name=op.f('fk_touches_bluetooth_device_id_bluetooth_device'), ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_touches')),
    sa.UniqueConstraint('id', name=op.f('uq_touches_id'))
    )
    op.execute('''INSERT INTO transport_type(id, name) VALUES (1, 'Автобус');''')
    op.execute('''INSERT INTO transport(id, type_id, number, region_numb, price, route_numb) VALUES (1, 1,'АБ123В', 123, 40, '12C');''')
    op.execute('''INSERT INTO transport(id, type_id, number, region_numb, price, route_numb) VALUES (2, 1,'АА777А', 93, 40, '4');''')
    op.execute('''INSERT INTO bluetooth_device(id, transport_id, mac_address) VALUES (1, 1, '00:50:B6:5B:CA:6A');''')
    op.execute('''INSERT INTO bluetooth_device(id, transport_id, mac_address) VALUES (2, 2, '00:12:B6:FB:CA:6A');''')
    op.execute('''INSERT INTO bluetooth_device(id, transport_id, mac_address) VALUES (3, 2, '80:47:86:74:76:53');''')
    op.execute('''INSERT INTO bluetooth_device(id, transport_id, mac_address) VALUES (4, 2, '40:AA:56:23:0D:7A');''')
    op.execute('''INSERT INTO ride_status(id, name, sort) VALUES (3, 'Инициализирована', 0)''')
    op.execute('''INSERT INTO ride_status(id, name, sort) VALUES (1, 'Подтверждена', 1);''')
    op.execute('''INSERT INTO ride_status(id, name, sort) VALUES (2, 'Оплачена', 2);''')
    op.execute('''INSERT INTO payment_status(id, name, sort) VALUES (1, 'Ожидается', 1);''')
    op.execute('''INSERT INTO payment_status(id, name, sort) VALUES (2, 'Оплачено', 2);''')
    op.execute('''INSERT INTO payment_status(id, name, sort) VALUES (3, 'Отклонено', 3);''')
    op.execute(
        '''INSERT INTO public.user(first_name, last_name, middle_name, phone_number, email, active, password, block, 
        limit_rides, id) VALUES ('Александр', 'Бородач', 'Родионович', '+74753149599', 'nikita@trackpay.com', false, 
        '123', false, null, 1);'''
    )
    op.execute('''INSERT INTO sbp_account(user_id, account_id, active) VALUES (1, 1, true);''')
    op.execute('''INSERT INTO uuid_device(id,token,uuid, user_id) VALUES (1, 'dbhpYfBjQu-eQ9E07h05n1:APA91bGt0vpftt5Gvqj74s8GHIt6I_WEq9h3kAaHQWrenWcdoF9Ux1WoeQ8ndIPRA143RwZ0BzJ-JuCTkgvRxCoxOIfvWO4G-OfmjWiBIqZxMg5TCsVVJruM1PLZyJZxTpX-O_lLf2_w', '2f893eaf-2afa-4028-bd53-08a56197707e', 1);''')
    op.execute('''INSERT INTO bluetooth_device(id, transport_id, mac_address) VALUES (5, 2, '30:AE:A4:74:A2:C6');''')
    op.execute('''INSERT INTO preference_account(id, user_id, account_id) VALUES (1, 1, 1);''')
    op.execute('''INSERT INTO bluetooth_device(id, transport_id, mac_address) VALUES (6, 2, '80:38:FB:13:0F:73');''')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('touches')
    op.drop_table('ride_payment')
    op.drop_table('ride')
    op.drop_index(op.f('ix_preference_account_user_id'), table_name='preference_account')
    op.drop_table('preference_account')
    op.drop_index(op.f('ix_bluetooth_device_mac_address'), table_name='bluetooth_device')
    op.drop_table('bluetooth_device')
    op.drop_table('verify_code')
    op.drop_table('uuid_device')
    op.drop_index(op.f('ix_transport_number'), table_name='transport')
    op.drop_table('transport')
    op.drop_index(op.f('ix_sbp_account_user_id'), table_name='sbp_account')
    op.drop_index(op.f('ix_sbp_account_account_id'), table_name='sbp_account')
    op.drop_table('sbp_account')
    op.drop_table('user')
    op.drop_table('transport_type')
    op.drop_table('ride_status')
    op.drop_table('payment_status')
    # ### end Alembic commands ###